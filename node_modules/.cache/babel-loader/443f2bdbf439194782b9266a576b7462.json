{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`cant remove product (id: ${action.id}) as its not in \n                    basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case 'SET_USER':\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/User/REACT/src/StateProvider/Reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC1BA,MAD0B,aAC1BA,MAD0B,uBAC1BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADG;;AAIP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFL,OAAP;;AAKJ,SAAK,oBAAL;AACI,YAAMM,KAAK,GAAGH,KAAK,CAACR,MAAN,CAAaY,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,MAAM,CAACK,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACR,MAAV,CAAhB;;AAEA,UAAGW,KAAK,IAAI,CAAZ,EAAe;AACXI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEO;AACHM,QAAAA,OAAO,CAACC,IAAR,CACK,4BAA2BT,MAAM,CAACK,EAAG;AAC1D,4BAFgB;AAIH;;AAED,aAAO,EACH,GAAGN,KADA;AAEHR,QAAAA,MAAM,EAAEe;AAFL,OAAP;;AAKJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGP,KADA;AAEHP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFV,OAAP;;AAKA;AACI,aAAOO,KAAP;AAlCZ;AAoCH,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket: [],\r\n    user: null\r\n};\r\n\r\nexport const getBasketTotal = (basket) =>\r\n    basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'ADD_TO_BASKET':\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            };\r\n\r\n        case 'REMOVE_FROM_BASKET':\r\n            const index = state.basket.findIndex(\r\n                (basketItem) => basketItem.id === action.id\r\n            );\r\n            let newBasket = [...state.basket];\r\n\r\n            if(index >= 0) {\r\n                newBasket.splice(index, 1);\r\n            } else {\r\n                console.warn(\r\n                    `cant remove product (id: ${action.id}) as its not in \r\n                    basket!`\r\n                )\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                basket: newBasket\r\n            }\r\n\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}