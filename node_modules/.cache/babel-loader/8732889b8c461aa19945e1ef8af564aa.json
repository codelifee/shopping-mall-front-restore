{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\REACT\\\\src\\\\landingpage\\\\Hamburger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { Link } from \"react-router-dom\";\nimport { staggerText, staggerReveal, fadeInUp, handleHover, handleHoverExit, handleCityReturn, handleCity, staggerRevealClose } from \"./Animations\";\nimport dallas from \"./images/storage.jpg\";\nimport austin from \"./images/kitchen.jpg\";\nimport newyork from \"./images/bathroom.jpg\";\nimport sanfrancisco from \"./images/lighting.jpg\";\nimport beijing from \"./images/bed.jpg\";\nconst cities = [{\n  name: \"Storage\",\n  image: dallas\n}, {\n  name: \"Kitchen\",\n  image: austin\n}, {\n  name: \"Bathroom\",\n  image: newyork\n}, {\n  name: \"Lighting\",\n  image: sanfrancisco\n}, {\n  name: \"Bed\",\n  image: beijing\n}];\n\nconst Hamburger = ({\n  state\n}) => {\n  _s();\n\n  // Create varibles of our dom nodes\n  let menuLayer = useRef(null);\n  let reveal1 = useRef(null);\n  let reveal2 = useRef(null);\n  let cityBackground = useRef(null);\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  let line3 = useRef(null);\n  let info = useRef(null);\n  useEffect(() => {\n    // If the menu is open and we click the menu button to close it.\n    if (state.clicked === false) {\n      // If menu is closed and we want to open it.\n      staggerRevealClose(reveal2, reveal1); // Set menu to display none\n\n      gsap.to(menuLayer, {\n        duration: 1,\n        css: {\n          display: \"none\"\n        }\n      });\n    } else if (state.clicked === true || state.clicked === true && state.initial === null) {\n      // Set menu to display block\n      gsap.to(menuLayer, {\n        duration: 0,\n        css: {\n          display: \"block\"\n        }\n      }); //Allow menu to have height of 100%\n\n      gsap.to([reveal1, reveal2], {\n        duration: 0,\n        opacity: 1,\n        height: \"100%\"\n      });\n      staggerReveal(reveal1, reveal2);\n      fadeInUp(info);\n      staggerText(line1, line2, line3);\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: el => menuLayer = el,\n    className: \"hamburger-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => reveal1 = el,\n      className: \"menu-secondary-background-color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => reveal2 = el,\n      className: \"menu-layer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => cityBackground = el,\n        className: \"menu-city-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-links\",\n            children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    onMouseEnter: e => handleHover(e),\n                    onMouseOut: e => handleHoverExit(e),\n                    ref: el => line1 = el,\n                    to: \"/opportunities\",\n                    children: \"Furniture\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    onMouseEnter: e => handleHover(e),\n                    onMouseOut: e => handleHoverExit(e),\n                    ref: el => line2 = el,\n                    to: \"/solutions\",\n                    children: \"Space Idea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    onMouseEnter: e => handleHover(e),\n                    onMouseOut: e => handleHoverExit(e),\n                    ref: el => line3 = el,\n                    to: \"/Home\",\n                    children: \"Go Shopping\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: el => info = el,\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Our Vision\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"is To create a better everyday life for the many people. On this site you can discover exactly what this means and find out who we are, what we do and what we stand for..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"locations\",\n              children: [\"Furniture:\", cities.map(el => /*#__PURE__*/_jsxDEV(\"span\", {\n                onMouseEnter: () => handleCity(el.image, cityBackground),\n                onMouseOut: () => handleCityReturn(cityBackground),\n                children: el.name\n              }, el.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Hamburger, \"ewV/kVc1U67NNHm6kGZl19QO+E4=\");\n\n_c = Hamburger;\nexport default Hamburger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hamburger\");","map":{"version":3,"sources":["C:/Users/User/REACT/src/landingpage/Hamburger.js"],"names":["React","useRef","useEffect","gsap","Link","staggerText","staggerReveal","fadeInUp","handleHover","handleHoverExit","handleCityReturn","handleCity","staggerRevealClose","dallas","austin","newyork","sanfrancisco","beijing","cities","name","image","Hamburger","state","menuLayer","reveal1","reveal2","cityBackground","line1","line2","line3","info","clicked","to","duration","css","display","initial","opacity","height","el","e","map"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  staggerText,\r\n  staggerReveal,\r\n  fadeInUp,\r\n  handleHover,\r\n  handleHoverExit,\r\n  handleCityReturn,\r\n  handleCity,\r\n  staggerRevealClose\r\n} from \"./Animations\";\r\n\r\nimport dallas from \"./images/storage.jpg\";\r\nimport austin from \"./images/kitchen.jpg\";\r\nimport newyork from \"./images/bathroom.jpg\";\r\nimport sanfrancisco from \"./images/lighting.jpg\";\r\nimport beijing from \"./images/bed.jpg\";\r\n\r\nconst cities = [\r\n  { name: \"Storage\", image: dallas },\r\n  { name: \"Kitchen\", image: austin },\r\n  { name: \"Bathroom\", image: newyork },\r\n  { name: \"Lighting\", image: sanfrancisco },\r\n  { name: \"Bed\", image: beijing }\r\n];\r\n\r\nconst Hamburger = ({ state }) => {\r\n  // Create varibles of our dom nodes\r\n  let menuLayer = useRef(null);\r\n  let reveal1 = useRef(null);\r\n  let reveal2 = useRef(null);\r\n  let cityBackground = useRef(null);\r\n  let line1 = useRef(null);\r\n  let line2 = useRef(null);\r\n  let line3 = useRef(null);\r\n  let info = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // If the menu is open and we click the menu button to close it.\r\n    if (state.clicked === false) {\r\n      // If menu is closed and we want to open it.\r\n\r\n      staggerRevealClose(reveal2, reveal1);\r\n      // Set menu to display none\r\n      gsap.to(menuLayer, { duration: 1, css: { display: \"none\" } });\r\n    } else if (\r\n      state.clicked === true ||\r\n      (state.clicked === true && state.initial === null)\r\n    ) {\r\n      // Set menu to display block\r\n      gsap.to(menuLayer, { duration: 0, css: { display: \"block\" } });\r\n      //Allow menu to have height of 100%\r\n      gsap.to([reveal1, reveal2], {\r\n        duration: 0,\r\n        opacity: 1,\r\n        height: \"100%\"\r\n      });\r\n      staggerReveal(reveal1, reveal2);\r\n      fadeInUp(info);\r\n      staggerText(line1, line2, line3);\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <div ref={el => (menuLayer = el)} className='hamburger-menu'>\r\n      <div\r\n        ref={el => (reveal1 = el)}\r\n        className='menu-secondary-background-color'></div>\r\n      <div ref={el => (reveal2 = el)} className='menu-layer'>\r\n        <div\r\n          ref={el => (cityBackground = el)}\r\n          className='menu-city-background'></div>\r\n        <div className='container1'>\r\n          <div className='wrapper'>\r\n            <div className='menu-links'>\r\n              <nav>\r\n                <ul>\r\n                  <li>\r\n                    <Link\r\n                      onMouseEnter={e => handleHover(e)}\r\n                      onMouseOut={e => handleHoverExit(e)}\r\n                      ref={el => (line1 = el)}\r\n                      to='/opportunities'>\r\n                      Furniture\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      onMouseEnter={e => handleHover(e)}\r\n                      onMouseOut={e => handleHoverExit(e)}\r\n                      ref={el => (line2 = el)}\r\n                      to='/solutions'>\r\n                      Space Idea\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n\r\n                      onMouseEnter={e => handleHover(e)}\r\n                      onMouseOut={e => handleHoverExit(e)}\r\n                      ref={el => (line3 = el)}\r\n                      to='/Home'>\r\n                      Go Shopping \r\n                      </Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n              <div ref={el => (info = el)} className='info'>\r\n                <h3>Our Vision</h3>\r\n                <p>\r\n                   is To create a better everyday life for the many people. \r\n                   On this site you can discover exactly what this means and \r\n                   find out who we are, what we do and what we stand for..\r\n                </p>\r\n              </div>\r\n              <div className='locations'>\r\n                Furniture:\r\n                {/* Returning the list of cities */}\r\n                {cities.map(el => (\r\n                  <span\r\n                    key={el.name}\r\n                    onMouseEnter={() => handleCity(el.image, cityBackground)}\r\n                    onMouseOut={() => handleCityReturn(cityBackground)}>\r\n                    {el.name}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hamburger;"]},"metadata":{},"sourceType":"module"}